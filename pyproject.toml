[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dgeb"
version = "0.1.0"
description = "Diverse Genomic Embedding Benchmark"
readme = "README.md"
license = { file = "LICENSE" }
keywords = [
    "scientific software",
    "genomic embeddings",
    "machine learning",
    "benchmark",
]
classifiers = [
    "Development Status :: 2 - Pre-Alpha",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
]
dependencies = [
    "datasets>=2.20.0",
    "matplotlib>=3.9.0",
    "numpy>=2.0.0",
    "pandas>=2.2.2",
    "pydantic>=2.7.4",
    "pytrec_eval_terrier>=0.5",
    "rich>=13.7.1",
    "scikit_learn>=1.5.0",
    "scipy>=1.13.1",
    "seaborn>=0.13.2",
    "torch>=2.3.1",
    "tqdm>=4.66.4",
    "transformers>=4.41.2",
]

[project.urls]
homepage = "https://github.com/TattaBio/DGEB"
"Huggingface Organization" = "https://huggingface.co/tattabio"
"Source Code" = "https://github.com/TattaBio/DGEB"

[project.scripts]
dgeb = "dgeb.cli:main"

[project.optional-dependencies]
dev = ["ruff>=0.0.254", "pytest", "pytest-xdist"]

[tool.setuptools.packages.find]
exclude = ["tests", "results", "leaderboard", "Dockerfile"]

[tool.setuptools.package-data]
"*" = ["*.json"]

[tool.ruff]
target-version = "py38"
exclude = [".venv", "build/"]
line-length = 88
indent-width = 4

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
build_command = "python -m pip install build; python -m build"
commit_message = "{version}\n\nAutomatically generated by python-semantic-release [skip ci]"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "v{version}"

[tool.semantic_release.branches.main]
match = "(main|master)"
prerelease_token = "rc"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = []

[tool.semantic_release.changelog.environment]
block_start_string = "{%"
block_end_string = "%}"
variable_start_string = "{{"
variable_end_string = "}}"
comment_start_string = "{#"
comment_end_string = "#}"
trim_blocks = false
lstrip_blocks = false
newline_sequence = "\n"
keep_trailing_newline = false
extensions = []
autoescape = true

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = [
    "build",
    "chore",
    "ci",
    "docs",
    "feat",
    "fix",
    "perf",
    "style",
    "refactor",
    "test",
]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[tool.semantic_release.remote]
name = "origin"
type = "github"
ignore_token_for_push = false
insecure = false

[tool.semantic_release.publish]
dist_glob_patterns = ["dist/*"]
upload_to_vcs_release = true
